{"version":3,"sources":["hooks/useAxios.js","hooks/useFetch.js","context/DrinksContext.js","components/DetailsRecipe/DetailsRecipeCard/ImageCard.js","components/DetailsRecipe/DetailsRecipeCard/IngredientsCard.js","components/DetailsRecipe/DetailsRecipeCard/QuantitiesCard.js","components/DetailsRecipe/DetailsRecipeCard.js","components/Error.js","components/Loading.js","components/DetailsRecipe.js","hooks/useForm.js","helpers/isValidDrinksForm.js","components/DrinksForm/CategorySelect/Option.js","components/DrinksForm/CategorySelect.js","components/DrinksForm/IngredientInput.js","components/DrinksForm/SubmitButton.js","components/DrinksForm.js","components/Header.js","components/Recipe/RecipeCard.js","components/Recipe/RecipeButton.js","components/Recipe.js","components/ScrollButton.js","pages/DrinksSearch.js","App.js","index.js"],"names":["useAxios","category","ingredient","isMountedRef","useRef","useState","data","loading","error","state","setState","useEffect","current","a","url","encodeURI","axios","get","response","drinks","getCategories","useFetch","id","fetch","request","json","getDetailsRecipe","DrinksContext","createContext","DrinksProvider","children","titlePage","openModal","idRecipe","setDrinks","recipes","detailRecipe","Provider","value","ImageCard","image","name","className","src","alt","IngredientsCard","ingredients","style","fontWeight","map","ind","QuantitiesCard","quantities","quantity","DetailsRecipeCard","recipe","setQuantities","setIngredients","strDrink","strDrinkThumb","strInstructions","capitalizeInstructions","charAt","toUpperCase","slice","key","includes","Object","keys","width","Error","height","Loading","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","backgroundColor","boxShadow","shadows","maxHeight","overflow","padding","spacing","position","DetailsRecipe","useContext","dataDetailRecipe","classes","modalStyle","Modal","open","onClose","length","useForm","initialState","formValues","setFormValues","handleInput","event","target","reset","newState","isValidDrinksForm","validator","isEmpty","isAlpha","ignore","errorDrinks","isValid","Option","text","CategorySelect","handleChange","categoriesAPI","errorAPI","sortCategories","categoryAPI","strCategory","replace","sort","htmlFor","onChange","defaultValue","sortCategory","IngredientInput","type","placeholder","SubmitButton","React","memo","disabled","DrinksForm","setError","setDisabled","autoComplete","onSubmit","preventDefault","escapedCategory","escape","escapedIngredient","Header","ref","RecipeCard","RecipeButton","onClick","Recipe","idDrink","ScrollButton","scrollIntoView","behavior","DrinksSearch","dataRecipes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab81eb72.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useAxios = ( category, ingredient ) => {\r\n    const isMountedRef = useRef( true );\r\n    const [ state, setState ] = useState( {\r\n        data: [],\r\n        loading: ( category === '' && !ingredient ) ? false : true,\r\n        error: null\r\n    } );\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            isMountedRef.current = false;\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        if( category !== '' ) {\r\n            setState( { data: [], loading: true, error: null } );\r\n\r\n            const getCategories = async() => {\r\n                try{\r\n                    const url =\r\n                        !ingredient\r\n                            ? \r\n                        `https://www.thecocktaildb.com/api/json/v1/1/list.php?c=${ encodeURI( category ) }`\r\n                            :\r\n                        `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${ encodeURI( category ) }&i=${ encodeURI( ingredient ) }`;\r\n    \r\n                    const response = await axios.get( url );\r\n                    const data = response.data?.drinks;\r\n    \r\n                    if( data ) {   \r\n                        isMountedRef.current\r\n                            &&\r\n                        setState( {\r\n                            data: data,\r\n                            loading: false,\r\n                            error: null\r\n                        } );\r\n                    } else {\r\n                        isMountedRef.current\r\n                            &&\r\n                        setState( {\r\n                            data: [],\r\n                            loading: false,\r\n                            error: 'Error en la peticion'\r\n                        } );\r\n                    }           \r\n                } catch( err ) {\r\n                    setState( { data: [], loading: false, error: err } );\r\n                }                \r\n            };\r\n    \r\n            getCategories();\r\n        }\r\n    }, [ category, ingredient ] );\r\n\r\n    return state;\r\n};\r\n\r\nexport default useAxios;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nconst useFetch = ( id ) => {\r\n    const isMountedRef = useRef( true );\r\n    const [ state, setState ] = useState( { data: {}, loading: false, error: null } );\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            isMountedRef.current = false;\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        if( id !== '' ) {\r\n            setState( { data: {}, loading: true, error: null } );\r\n\r\n            const getDetailsRecipe = async() => {\r\n                try{\r\n                    const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${ id }`;\r\n                    \r\n                    const request = await fetch( url );\r\n                    const response = await request.json();\r\n\r\n                    if( !response.drinks ) {\r\n                        isMountedRef.current\r\n                            &&\r\n                        setState( {\r\n                            data: {},\r\n                            loading: false,\r\n                            error: 'Error en la petición.'\r\n                        } );\r\n                    } else {\r\n                        isMountedRef.current\r\n                            &&\r\n                        setState( {\r\n                            data: response.drinks[ 0 ],\r\n                            loading: false,\r\n                            error: null\r\n                        } );\r\n                    }\r\n                } catch( err ) {\r\n                    setState( { data: {}, loading: false, error: err } );\r\n                }                \r\n            };\r\n\r\n            getDetailsRecipe();\r\n        }\r\n    }, [ id ] );\r\n\r\n    return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import React, { createContext, useRef, useState } from 'react';\r\nimport useAxios from '../hooks/useAxios';\r\nimport useFetch from '../hooks/useFetch';\r\n\r\nconst DrinksContext = createContext();\r\n\r\nconst DrinksProvider = ( { children } ) => {\r\n    const titlePage = useRef();\r\n\r\n    const [ drinks, setDrinks ] = useState( { category: '', ingredient: '', openModal: false, idRecipe: '' } );\r\n    const { category, ingredient, openModal, idRecipe } = drinks;\r\n    \r\n    const recipes = useAxios( category, ingredient );\r\n    const detailRecipe = useFetch( idRecipe );\r\n\r\n    return (\r\n        <DrinksContext.Provider\r\n            value={\r\n                {\r\n                    titlePage,\r\n                    setDrinks,\r\n                    recipes,\r\n                    openModal,\r\n                    detailRecipe\r\n                }\r\n            }\r\n        >\r\n            { children }\r\n        </DrinksContext.Provider>\r\n    );\r\n};\r\n\r\nexport {\r\n    DrinksContext,\r\n    DrinksProvider\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageCard = ( { image, name } ) => {\r\n    return (\r\n        <div className=\"col-md-5\">\r\n            <img\r\n                src={ image }\r\n                alt={ name }\r\n                className=\"card-img\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nImageCard.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ImageCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst IngredientsCard = ( { ingredients } ) => {\r\n    return (\r\n        <div className=\"col-md-6 mb-3\">\r\n            <p className=\"card-text mb-1\" style={ { fontWeight: 'bold' } }>\r\n                Ingredientes:\r\n            </p>\r\n\r\n            <ul className=\"card-text\">\r\n                {\r\n                    ingredients.map( ( ingredient, ind ) => (\r\n                        <li key={ ind }>{ ingredient }</li>\r\n                    ) )\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nIngredientsCard.propTypes = {\r\n    ingredients: PropTypes.array.isRequired\r\n};\r\n\r\nexport default IngredientsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QuantitiesCard = ( { quantities } ) => {\r\n    return (\r\n        <div className=\"col-md-6 mb-3\">\r\n            <p className=\"card-text mb-1\"  style={ { fontWeight: 'bold' } }>\r\n                Cantidades:\r\n            </p>\r\n\r\n            <ul className=\"card-text\">\r\n                {\r\n                    quantities.map( ( quantity, ind ) => (\r\n                        <li key={ ind }>{ quantity }</li>\r\n                    ) )\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nQuantitiesCard.propTypes = {\r\n    quantities: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QuantitiesCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageCard from './DetailsRecipeCard/ImageCard';\r\nimport IngredientsCard from './DetailsRecipeCard/IngredientsCard';\r\nimport QuantitiesCard from './DetailsRecipeCard/QuantitiesCard';\r\n\r\nconst DetailsRecipeCard = ( { recipe } ) => {\r\n    const [ quantities, setQuantities ] = useState( [] );\r\n    const [ ingredients, setIngredients ] = useState( [] );\r\n    const { strDrink, strDrinkThumb, strInstructions } = recipe;\r\n\r\n    const capitalizeInstructions = strInstructions.charAt( 0 ).toUpperCase() + strInstructions.slice( 1 );\r\n\r\n    useEffect( () => {\r\n        for( let key of Object.keys( recipe ) ) {\r\n            if( key.includes( 'strIngredient' ) && recipe[ key ] ) {\r\n                setIngredients( ingredients => (\r\n                    [\r\n                        ...ingredients,\r\n                        recipe[ key ]\r\n                    ]\r\n                ) );\r\n            }\r\n\r\n            if( key.includes( 'strMeasure' ) && recipe[ key ] ) {\r\n                setQuantities( quantities => (\r\n                    [\r\n                        ...quantities,\r\n                        recipe[ key ]\r\n                    ]\r\n                ) );\r\n            }\r\n        }\r\n    }, [ recipe ] );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" style={ { width: '100%' } }>\r\n            <div className=\"row\">\r\n                <ImageCard\r\n                    image={ strDrinkThumb }\r\n                    name={ strDrink }\r\n                />\r\n\r\n                <div className=\"col-md-7\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title card-title-modal\">{ strDrink }</h5>\r\n\r\n                        <div className=\"row\">\r\n                            <IngredientsCard ingredients={ ingredients } />\r\n\r\n                            <QuantitiesCard quantities={ quantities } />\r\n                        </div>\r\n\r\n                        <p className=\"card-text text-justify\">{ capitalizeInstructions }</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDetailsRecipeCard.propTypes = {\r\n    recipe: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DetailsRecipeCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ( { height } ) => {\r\n    return (\r\n        <div className=\"container-error\" style={ { height: height } }>\r\n            <p className=\"error\">\r\n                No se obtuvieron resultados, intente nuevamente.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    height: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Loading = ( { height } ) => {\r\n    return (\r\n        <div className=\"container-loading\" style={ { height: height } }>\r\n            <div className=\"sk-chase\">\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoading.propTypes = {\r\n    height: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Modal } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DrinksContext } from '../context/DrinksContext';\r\nimport DetailsRecipeCard from './DetailsRecipe/DetailsRecipeCard';\r\nimport Error from './Error';\r\nimport Loading from './Loading';\r\n\r\nconst getModalStyle = () => {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${ top }%`,\r\n        left: `${ left }%`,\r\n        transform: `translate( -${ top }%, -${ left }% )`\r\n    };\r\n};\r\n\r\nconst useStyles = makeStyles( theme => (\r\n    {\r\n        paper: {\r\n            backgroundColor: 'rgba(230, 230, 230, 0.7)',\r\n            boxShadow: theme.shadows[ 5 ],\r\n            maxHeight: '95%',\r\n            overflow: 'auto',\r\n            padding: theme.spacing( 2, 4, 3 ),\r\n            position: 'absolute',\r\n            width: '75%'\r\n        }\r\n    }\r\n) );\r\n\r\nconst DetailsRecipe = () => {\r\n    const { setDrinks, detailRecipe, openModal } = useContext( DrinksContext );\r\n    const { data: dataDetailRecipe, loading, error } = detailRecipe;\r\n\r\n    const classes = useStyles();\r\n    const [ modalStyle ] = useState( getModalStyle );\r\n\r\n    const handleClose = () => {\r\n        setDrinks( drinks => (\r\n            {\r\n                ...drinks,\r\n                openModal: false\r\n            }\r\n        ) );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Modal\r\n                open={ openModal }\r\n                onClose={ handleClose }\r\n            >\r\n                <div style={ modalStyle } className={ classes.paper }>\r\n                    {\r\n                        loading\r\n                            ?\r\n                                <Loading height=\"550px\" />\r\n                            :\r\n                                ( error && Object.keys( dataDetailRecipe ).length < 0 )\r\n                                    ?\r\n                                        <Error height=\"550px\" />\r\n                                    :\r\n                                        <DetailsRecipeCard recipe={ dataDetailRecipe } />\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsRecipe;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n    const [ formValues, setFormValues ] = useState( initialState );\r\n\r\n    const handleInput = ( event ) => {\r\n        setFormValues( {\r\n            ...formValues,\r\n            [ event.target.name ]: event.target.value\r\n        } );\r\n    };\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setFormValues( newState );\r\n    };\r\n\r\n    return [ formValues, handleInput, reset ];\r\n};\r\n\r\nexport default useForm;\r\n","import validator from 'validator';\r\n\r\nconst isValidDrinksForm = ( category, ingredient ) => {\r\n    if( validator.isEmpty( ingredient ) || !validator.isAlpha( ingredient, [ 'es-ES' ], { ignore: ' -0123456789' } ) ) {\r\n        return {\r\n            errorDrinks: 'Todos los campos son obligatorios.',\r\n            isValid: false\r\n        };\r\n    } else if( validator.isEmpty( category ) || !validator.isAlpha( category, [ 'es-ES' ], { ignore: ' -0123456789' } ) ) {\r\n        return {\r\n            errorDrinks: 'Todos los campos son obligatorios.',\r\n            isValid: false\r\n        };\r\n    }\r\n\r\n    return {\r\n        errorDrinks: null,\r\n        isValid: true\r\n    };\r\n};\r\n\r\nexport default isValidDrinksForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Option = ( { value, text } ) => {\r\n    return (\r\n        <option value={ value }>\r\n            { text }\r\n        </option>\r\n    );\r\n};\r\n\r\nOption.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport Option from './CategorySelect/Option';\r\n\r\nconst CategorySelect = ( { category, handleChange, error } ) => {\r\n    const { data: categoriesAPI, loading, error: errorAPI } = useAxios( 'list' );\r\n\r\n    const sortCategories = categoriesAPI.map( categoryAPI => {\r\n        const newCategory = categoryAPI.strCategory.replace( /\\//g, '-' );\r\n        return newCategory;\r\n    } ).sort();\r\n\r\n    return (\r\n        <div className=\"col-md-5 mb-2\">\r\n            <label htmlFor=\"category\" className=\"form-label\">Categoría</label>\r\n            <select\r\n                id=\"category\"\r\n                name=\"category\"\r\n                className={ `form-control ${ error && 'is-invalid' }` }\r\n                value={ category }\r\n                onChange={ handleChange }\r\n            >\r\n                <option value=\"\" defaultValue>-Seleccione una categoría-</option>\r\n\r\n                { loading && <Option value=\"\" text=\"Loading...\" /> }\r\n\r\n                {\r\n                    errorAPI\r\n                        ?\r\n                            <Option value=\"\" text=\"Recargue el sitio nuevamente.\" />\r\n                        :\r\n                            sortCategories.map( sortCategory => (\r\n                                <Option\r\n                                    key={ sortCategory }\r\n                                    value={ sortCategory }\r\n                                    text={ sortCategory }\r\n                                />\r\n                            ) )\r\n                }\r\n            </select>\r\n            <div className=\"invalid-feedback\">\r\n                { error }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCategorySelect.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CategorySelect;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst IngredientInput = ( { ingredient, handleChange, error } ) => {\r\n    return (\r\n        <div className=\"col-md-5 offset-md-1 mb-2\">\r\n            <label htmlFor=\"ingredient\" className=\"form-label\">Ingrediente</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"ingredient\"\r\n                name=\"ingredient\"\r\n                placeholder=\"Ingrediente\"\r\n                className={ `form-control ${ error && 'is-invalid' }` }\r\n                value={ ingredient }\r\n                onChange={ handleChange }\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n                { error }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nIngredientInput.propTypes = {\r\n    ingredient: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n};\r\n\r\nexport default IngredientInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SubmitButton = React.memo( ( { disabled } ) => {\r\n    return (\r\n        <div className=\"col-md-10 offset-md-1 mt-2\">\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-block btn-primary\"\r\n                disabled={ disabled }\r\n            >\r\n                Buscar\r\n            </button>\r\n        </div>\r\n    );\r\n} );\r\n\r\nSubmitButton.propTypes = {\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React, { useContext, useState } from 'react';\r\nimport validator from 'validator';\r\nimport { DrinksContext } from '../context/DrinksContext';\r\nimport useForm from '../hooks/useForm';\r\nimport isValidDrinksForm from '../helpers/isValidDrinksForm';\r\nimport CategorySelect from './DrinksForm/CategorySelect';\r\nimport IngredientInput from './DrinksForm/IngredientInput';\r\nimport SubmitButton from './DrinksForm/SubmitButton';\r\n\r\nconst DrinksForm = () => {\r\n    const { setDrinks } = useContext( DrinksContext );\r\n\r\n    const [ formValues, handleChange, reset ] = useForm( { category: '', ingredient: '' } );\r\n    const { category, ingredient } = formValues;\r\n\r\n    const [ error, setError ] = useState( null );\r\n    const [ disabled, setDisabled ] = useState( false );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        setDisabled( true );\r\n\r\n        const escapedCategory = validator.escape( category );\r\n        const escapedIngredient = validator.escape( ingredient );\r\n\r\n        const { errorDrinks, isValid } = isValidDrinksForm( escapedCategory, escapedIngredient );\r\n        setError( errorDrinks );\r\n\r\n        if( isValid ) {\r\n            setDrinks( drinks => (\r\n                {\r\n                    ...drinks,\r\n                    category: escapedCategory.replace( /-/g, '/' ),\r\n                    ingredient: escapedIngredient\r\n                }\r\n            ) );\r\n\r\n            reset();\r\n        }\r\n\r\n        setDisabled( false );\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-12 pb-4\" autoComplete=\"off\" onSubmit={ handleSubmit }>\r\n                <div className=\"row\">\r\n                    <IngredientInput\r\n                        ingredient={ ingredient }\r\n                        handleChange={ handleChange }\r\n                        error={ error ? error : '' }\r\n                    />\r\n\r\n                    <CategorySelect\r\n                        category={ category }\r\n                        handleChange={ handleChange }\r\n                        error={ error ? error : '' }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <SubmitButton disabled={ disabled } />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrinksForm;\r\n","import React, { useContext } from 'react';\r\nimport { DrinksContext } from '../context/DrinksContext';\r\n\r\nconst Header = () => {\r\n    const { titlePage } = useContext( DrinksContext );\r\n\r\n    return (\r\n        <header className=\"bg-primary\" ref={ titlePage }>\r\n            <h1>Busca recetas de tragos</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RecipeCard = React.memo( ( { name, image } ) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ image } alt={ name } className=\"card-img-top\"/>\r\n\r\n            <div className=\"card-body p-1 text-center\">\r\n                <h5 className=\"card-title\">{ name }</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n} );\r\n\r\nRecipeCard.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired\r\n};\r\n\r\nexport default RecipeCard;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DrinksContext } from '../../context/DrinksContext';\r\n\r\nconst RecipeButton = ( { id } ) => {\r\n    const { setDrinks } = useContext( DrinksContext );\r\n\r\n    const handleClick = () => {\r\n        setDrinks( drinks => (\r\n            {\r\n                ...drinks,\r\n                idRecipe: id,\r\n                openModal: true\r\n            }\r\n        ) );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-12 p-0\">\r\n                <button\r\n                    className=\"btn btn-block btn-danger btn-recipe\"\r\n                    onClick={ handleClick }\r\n                >\r\n                    Receta\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nRecipeButton.propTypes = {\r\n    id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default RecipeButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RecipeCard from './Recipe/RecipeCard';\r\nimport RecipeButton from './Recipe/RecipeButton';\r\n\r\nconst Recipe = React.memo( ( { recipe } ) => {\r\n    const { idDrink, strDrink, strDrinkThumb } = recipe;\r\n    \r\n    return (\r\n        <div className=\"col-sm-3 p-2\">\r\n            <div className=\"border border-danger\">\r\n                <RecipeCard\r\n                    name={ strDrink }\r\n                    image={ strDrinkThumb ? strDrinkThumb : '' }\r\n                />\r\n\r\n                <RecipeButton id={ idDrink } />\r\n            </div>\r\n        </div>\r\n    );\r\n} );\r\n\r\nRecipe.propTypes = {\r\n    recipe: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useContext } from 'react';\r\nimport { DrinksContext } from '../context/DrinksContext';\r\n\r\nconst ScrollButton = () => {\r\n    const { titlePage } = useContext( DrinksContext );\r\n\r\n    const handleClick = () => {\r\n        titlePage.current.scrollIntoView( { behavior: 'smooth' } );\r\n    };\r\n\r\n    return (\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-md-10 offset-md-1 mb-4\">\r\n                <button\r\n                    className=\"btn btn-block btn-primary\"\r\n                    onClick={ handleClick }\r\n                >\r\n                    Volver a buscar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScrollButton;\r\n","import React, { useContext } from 'react';\r\nimport { DrinksContext } from '../context/DrinksContext';\r\nimport DetailsRecipe from '../components/DetailsRecipe';\r\nimport DrinksForm from '../components/DrinksForm';\r\nimport Error from '../components/Error';\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\nimport Recipe from '../components/Recipe';\r\nimport ScrollButton from '../components/ScrollButton';\r\n\r\nconst DrinksSearch = () => {\r\n    const { recipes } = useContext( DrinksContext );\r\n    const { data: dataRecipes, loading, error } = recipes;\r\n    \r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <div className=\"container mt-3\">\r\n                <DrinksForm />\r\n\r\n                {\r\n                    loading\r\n                        ?\r\n                            <Loading height=\"395px\" />\r\n                        :\r\n                            ( error && dataRecipes.length < 0 )\r\n                                ?\r\n                                    <Error height=\"355px\" />\r\n                                :\r\n                                    <div className=\"row animate__animated animate__fadeIn\">\r\n                                        {\r\n                                            dataRecipes.map( recipe => (\r\n                                                <Recipe\r\n                                                    key={ recipe.idDrink }\r\n                                                    recipe={ recipe }\r\n                                                />\r\n                                            ) )\r\n                                        }\r\n                                    </div>\r\n                }\r\n\r\n                { dataRecipes.length > 0 && <ScrollButton /> }\r\n            </div>\r\n\r\n            <DetailsRecipe />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrinksSearch;\r\n","import React from 'react';\r\nimport { DrinksProvider } from './context/DrinksContext';\r\nimport DrinksSearch from './pages/DrinksSearch';\r\n\r\nconst App = () => {\r\n    return (\r\n        <DrinksProvider>\r\n            <DrinksSearch />\r\n        </DrinksProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootswatch/dist/united/bootstrap.min.css';\r\nimport 'animate.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById( 'root' ) );\r\n"],"sourceRoot":""}